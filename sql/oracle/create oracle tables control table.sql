CREATE USER TRIALS_DEV IDENTIFIED BY xxxxxx DEFAULT TABLESPACE PHIL;
GRANT CONNECT, RESOURCE, CREATE VIEW, SELECT ANY DICTIONARY, SELECT ANY TABLE, CREATE DATABASE LINK, CREATE SYNONYM, CREATE MATERIALIZED VIEW TO TRIALS_DEV;

/*
PRIVILEGE                              
----------------------------------------
CREATE CLUSTER                           
CREATE DATABASE LINK                     
CREATE INDEXTYPE                         
CREATE MATERIALIZED VIEW                 
CREATE OPERATOR                          
CREATE PROCEDURE                         
CREATE SEQUENCE                          
CREATE SESSION                           
CREATE SYNONYM                           
CREATE TABLE                             
CREATE TRIGGER                           
CREATE TYPE                              
CREATE VIEW                              
SELECT ANY DICTIONARY                    
SELECT ANY TABLE                         
UNLIMITED TABLESPACE    
*/

CREATE SEQUENCE XLSXIDS;
CREATE SEQUENCE SYSIDS;
CREATE SEQUENCE i2b2_jobs_seq;

CREATE TABLE ENROLLED_PATIENT (
	MRN VARCHAR2(12), 
	ADMIT_DATE VARCHAR2(12), 
	DISCHARGE_DATE VARCHAR2(12), 
	PROJECTID NUMBER, 
	SITE VARCHAR2(3), 
	STUDYID VARCHAR2(15), 
	UPDATED DATE, 
	DELETED CHAR(1), 
	SYSID NUMBER PRIMARY KEY, 
	PROJECTNAME VARCHAR2(12), 
	PID NUMBER, 
	DOB_DATE DATE, 
	LASTNAME VARCHAR2(100), 
	FIRSTNAME VARCHAR2(100), 
	MESSAGES VARCHAR2(50), 
	ENROLLED DATE, 
	ARM VARCHAR2(25)
);
  
CREATE TABLE ENROLLED_PATIENT_TEMP (
	MRN VARCHAR2(12), 
	ADMIT_DATE VARCHAR2(12), 
	DISCHARGE_DATE VARCHAR2(12), 
	PROJECTID NUMBER, 
	SITE VARCHAR2(3), 
	STUDYID VARCHAR2(15), 
	UPDATED DATE, 
	DELETED CHAR(1), 
	SYSID NUMBER, 
	PROJECTNAME VARCHAR2(12), 
	PID NUMBER, 
	DOB_DATE DATE, 
	LASTNAME VARCHAR2(100), 
	FIRSTNAME VARCHAR2(100), 
	MESSAGES VARCHAR2(50), 
	ENROLLED DATE, 
	ARM VARCHAR2(25)
);
  
CREATE TABLE ENROLLED_PATIENT_XLS_DATA (
	PROJECTID NUMBER, 
	EXTSYSID NUMBER, 
	COLUMNID VARCHAR2(255), 
	VAL VARCHAR2(255)
);
  
CREATE TABLE ENROLLED_PATIENT_XLS_DATA_TEMP (
	PROJECTID NUMBER, 
	EXTSYSID NUMBER, 
	COLUMNID VARCHAR2(255), 
	VAL VARCHAR2(255)
);
  
CREATE TABLE I2B2_JOBS (
	JOB_ID NUMBER, 
	JOB_TYPE VARCHAR2(100), 
	PROJECTID NUMBER, 
	PROJECTCODE VARCHAR2(35), 
	STATUS VARCHAR2(20), 
	START_TIME DATE, 
	ACTUAL_START_TIME DATE, 
	END_TIME DATE, 
	ACTUAL_END_TIME DATE, 
	ERROR_CLOB CLOB, 
	PERCENT_COMPLETE NUMBER, 
	LAST_TOUCHED DATE, 
	PARAMS VARCHAR2(1000), 
	LAST_UI_TOUCHED DATE, 
	USERNAME VARCHAR2(35), 
	ENVIRONMENT CHAR(1)
);

CREATE OR REPLACE TRIGGER I2B2_JOBS_TRIG BEFORE INSERT ON I2B2_JOBS 
REFERENCING NEW AS New OLD AS Old
FOR EACH ROW
DECLARE
tmpVar NUMBER;
/******************************************************************************
NAME:       i2b2_jobs_trig
PURPOSE:    
REVISIONS:
Ver        Date        Author           Description
---------  ----------  ---------------  ------------------------------------
1.0        6/27/2014      skeshk       1. Created this trigger.
NOTES:
Automatically available Auto Replace Keywords:
Object Name:     i2b2_jobs_trig
Sysdate:         6/27/2014
Date and Time:   6/27/2014, 4:21:31 PM, and 6/27/2014 4:21:31 PM
Username:        skeshk (set in TOAD Options, Proc Templates);
Table Name:      I2B2_JOBS (set in the New PL/SQL Object dialog);
Trigger Options:  (set in the New PL/SQL Object dialog);
******************************************************************************/
BEGIN
tmpVar := 0;
SELECT i2b2_jobs_seq.NEXTVAL INTO tmpVar FROM dual;
:NEW.job_id := tmpVar;
EXCEPTION
WHEN OTHERS THEN
-- Consider logging the error and then re-raise
RAISE;
END i2b2_jobs_trig;
/

CREATE TABLE I2B2_JOBS_LOG (
	JOB_ID NUMBER, 
	DATEOF TIMESTAMP (6), 
	DESCR VARCHAR2(1000)
);
  
CREATE TABLE MOTD (
	SYSID NUMBER PRIMARY KEY , 
	ISACTIVE CHAR(1), 
	MOTD VARCHAR2(4000)
);
  
CREATE TABLE PROJECT_REDCAP_OUTPUT_EAV (
	SYSID NUMBER PRIMARY KEY, 
	PROJECTID NUMBER, 
	PATIENT_NUM NUMBER, 
	STUDYID VARCHAR2(50), 
	EVENT_NAME VARCHAR2(255), 
	VAR VARCHAR2(255), 
	VALUE CLOB, 
	SENDLOG VARCHAR2(2000), 
	GENERATED CLOB
);
  
CREATE INDEX IDX_REDCAP_OUTPUT_EAV ON PROJECT_REDCAP_OUTPUT_EAV (PROJECTID, STUDYID, VAR);


CREATE TABLE PROJECTS (
	PROJECTID NUMBER PRIMARY KEY, 
	PROJECTTITLE VARCHAR2(512), 
	PROJECTREQUESTER VARCHAR2(120), 
	CONTACTNUMBER VARCHAR2(50), 
	CONTACTEMAIL VARCHAR2(75), 
	PROJECTENDDATE DATE, 
	DEPARTMENT VARCHAR2(512), 
	REQUESTREASON VARCHAR2(512), 
	REQUESTREASONOTHER VARCHAR2(512), 
	PROJECTPI VARCHAR2(100), 
	RSRBAPPROVAL VARCHAR2(35), 
	HIPAAAGREE CHAR(1), 
	PROJECTDESC VARCHAR2(2048), 
	PROJECTTYPE VARCHAR2(25), 
	PROTOCOLFILE VARCHAR2(256), 
	APPROVALFILE VARCHAR2(256), 
	WAIVERFILE VARCHAR2(256), 
	RSRBENDDATE DATE, 
	STATUS VARCHAR2(50), 
	ISDELETED CHAR(1), 
	CREATION_DATE DATE, 
	TIME_STAMP DATE, 
	SUBMITTED_DATE DATE, 
	PROJECTREQUESTERNAME VARCHAR2(255), 
	REQUESTEDITEMS CLOB, 
	DATAUSAGE CLOB, 
	RESTRICTIONS CLOB, 
	PHI CHAR(1), 
	SYSUSE CHAR(1), 
	COMMENTS CLOB, 
	IRBENDDATE VARCHAR2(40), 
	IRBAPPROVAL VARCHAR2(40), 
	PROJECTCODE VARCHAR2(35), 
	REDCAP_URL VARCHAR2(512), 
	REDCAP_APIKEY VARCHAR2(64), 
	REDCAP_SYNCDATE DATE, 
	SYNCDATE DATE, 
	SYNCSTATUS CHAR(15), 
	ENDDATE DATE, 
	SYNCFINISHED DATE, 
	ADDITIONALUSERS VARCHAR2(512), 
	TESTSTATUS VARCHAR2(15), 
	TESTDATE DATE, 
	TESTPATIENT NUMBER, 
	GENERATION_SQL VARCHAR2(2000), 
	TESTFIELD VARCHAR2(50), 
	UPLOADLIST VARCHAR2(1), 
	NOLISTDESC VARCHAR2(2000), 
	DM_MADE VARCHAR2(1), 
	I2B2QUERY VARCHAR2(50), 
	I2B2QUERY_YN VARCHAR2(1), 
	CONCEPTS_SELECTED VARCHAR2(255), 
	REDCAP_NEEDED VARCHAR2(1), 
	SENDSTATUS VARCHAR2(100), 
	REDCAP_PRJ_NAME VARCHAR2(255), 
	QUERY_MASTER_ID VARCHAR2(255),
	INITIALS VARCHAR2(3),
	WILLDOCITATION VARCHAR2(15)
);
  
CREATE OR REPLACE TRIGGER TRG_PROJECTS_AUTOTIME before insert or update on projects for each row begin
	select sysdate into :new.time_Stamp from dual;
end;
/

CREATE OR REPLACE TRIGGER TRG_PROJECTS_INSERTTIME before insert on projects for each row begin
	select sysdate into :new.creation_date from dual;
end;
/

CREATE TABLE PROJECTS_BLOBS (
	PROJECTID NUMBER, 
	FIELDNAME CHAR(35), 
	FILENAME CHAR(256), 
	FILECONTENTS BLOB, 
	UPDATED DATE
);

CREATE TABLE PROJECTS_REDCAP_EVENTS (
	PROJECTID NUMBER, 
	ARM NUMBER, 
	EVENT_NAME VARCHAR2(100), 
	UNIQUE_EVENT_NAME VARCHAR2(256), 
	DAY_OFFSET NUMBER, 
	OFFSET_MIN NUMBER, 
	OFFSET_MAX NUMBER
);
  
CREATE TABLE PROJECTS_REDCAP_FIELDS (
	PROJECTID NUMBER, 
	ENTERORDER NUMBER, 
	FIELD_NAME VARCHAR2(255), 
	FORM_NAME VARCHAR2(255), 
	SECTION_HEADER VARCHAR2(255), 
	FIELD_TYPE VARCHAR2(25), 
	FIELD_LABEL VARCHAR2(512), 
	SELECT_CHOICES_OR_CALCULATIONS VARCHAR2(4000), 
	FIELD_NOTE VARCHAR2(512), 
	TEXT_VALIDATION_TYPE VARCHAR2(512), 
	TEXT_VALIDATION_MIN VARCHAR2(25), 
	TEXT_VALIDATION_MAX VARCHAR2(25), 
	IDENTIFIERS VARCHAR2(50), 
	BRANCHING_LOGIC VARCHAR2(4000), 
	REQUIRED_FIELD VARCHAR2(10), 
	CUSTOM_ALIGNMENT VARCHAR2(10), 
	QUESTION_NUMBER VARCHAR2(10), 
	MATRIX_GROUP_NAME VARCHAR2(100)
);
  
CREATE TABLE PROJECTS_REDCAP_FIELDS_MAPPING (
	SYSID NUMBER PRIMARY KEY, 
	PROJECTID NUMBER, 
	FIELD_NAME VARCHAR2(100), 
	FORM_NAME VARCHAR2(100), 
	AGGR_TYPE VARCHAR2(25), 
	CONCEPTPATH VARCHAR2(512), 
	CONCEPTNAME VARCHAR2(512), 
	VALUE VARCHAR2(50), 
	ORDNUNG NUMBER(3,0), 
	OPTIONS VARCHAR2(255), 
	MODIFIER VARCHAR2(120), 
	FILTERED VARCHAR2(120)
);
  
CREATE TABLE PROJECTS_REDCAP_FORMS (
	PROJECTID NUMBER, 
	ARM NUMBER, 
	EVENT VARCHAR2(50), 
	FORM VARCHAR2(100)
);
  
CREATE TABLE PROJECTS_UPLOADS (
	LOC VARCHAR2(512), 
	ID NUMBER PRIMARY KEY, 
	STATUS VARCHAR2(25)
);
  
CREATE TABLE UPLOAD_ERRORS (
	DATEOF DATE, 
	ERROR VARCHAR2(4000)
);
  
CREATE TABLE SAMPLE_PATIENTS(
	LASTNAME CHAR(25), 
	FIRSTNAME CHAR(25), 
	MRN NUMBER, 
	DOB CHAR(8)
);
 